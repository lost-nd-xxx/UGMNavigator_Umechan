// あやりりすEX　ゴーストテンプレート
// メニュー処理辞書
//******************************************************************************

ダブルクリック0
{
	Menu
}

MenuComment
{
	_script = ''
	if (STRLEN(MenuCommentForce) > 0) {
		_script += MenuCommentForce
		ERASEVAR('MenuCommentForce')
	}
	else {
		_script += _argv[0]
	}
	_script
}

MenuBreadCrumbs
{
	_script = ''
	for _i=0; _i<ARRAYSIZE(_argv[0]); _i++ {
		if _i > 0 {
			_script += ' > '
		}
		if _i == ARRAYSIZE(_argv[0]) - 1 {
			_script += '\f[color,disable]\f[underline,1]' + _argv[0][_i][1, '|'] + '\f[default]'
		}
		else {
			_script += '\__q[' + _argv[0][_i][0, '|'] + ']' + _argv[0][_i][1, '|'] + '\__q'
		}
	}
	_script = '\0\_l[0,0]\n[30]' + _script + '\n[-30]\*'
	_script
}

MenuHr
{
	_multiplier = 140
	_a0_len = GETSTRBYTES(_argv[0], 127) * (_multiplier / 100)
	_a0 = _argv[0]
	if (_a0_len > BalloonCharCnt) {
		_length = (BalloonValidWidth / (BalloonCharWidth * (_multiplier / 100)))
		_a0 = SHIORI3FW.MakeJustText(_a0, _length)
	}
	_script += '\f[color,disable]'
	_script += '────────────────────────'
	_script += '\f[default]'
	if (STRLEN(_a0) > 0) {
		_script += '\n[100]'
		_script += '\f[height,' + _multiplier + '%]\_l[@0,@-0.15em]\f[bold,1]'
		_script += _a0
		_script += '\f[default]'
		_script += '\n[100]'
		_script += '\f[color,disable]'
		_script += '────────────────────────'
		_script += '\f[default]'
	}
	_script
}

CloseMenuButton
{
	'\0\_l[0,0]\f[align,right]\f[height,150%]\__q[script:\e]\_u[0x274E]\__q\f[default]\*'
}

MenuItem
{
	_ref = ''
	for _i=2; _i<_argc; _i++ {
		if (_i > 2) {
			_ref += ','
		}
		_ref += _argv[_i]
	}
	_cnt = TOINT(_argv[0])
	if (_cnt <= 0) {
		_cnt++
	}
	_cnt = (BalloonCharCnt - _cnt * 2) / _cnt
	_label = _argv[1]
	if (_label != '\f[color,disable]※未設定※\f[color,default]') {
		_label = SHIORI3FW.MakeJustText(_label, _cnt)
	}
	else {
		_label = SHIORI3FW.MakeJustText('※未設定※', _cnt)
		_label = '\f[color,disable]' + _label + '\f[color,default]'
	}

	'\![*]\__q[' + _ref + ']' + _label + '\__q'
}

//------------------------------------------------------------------------------
//メインメニュー展開
//------------------------------------------------------------------------------

Menu
{
	_BreadCrumbs = (IARRAY, 'Menu|メニュー')

	_talk = ''
	_talk += '\![close,inputbox,__SYSTEM_ALL_INPUT__]'
	_talk += '\![quicksection,1]'
	_talk += '\0\_n'
	_talk += "%(CloseMenuButton)"
	_talk += "%(MenuBreadCrumbs(JOIN(_BreadCrumbs,',')))\n[150]"
	_talk += "%(MenuHr('ＵＧＭ補助機能'))\n"
	_talk += "%(MenuItem(1,'スクリプト作成＆イベント試行','Menu_UgmTools'))\n"
	_talk += "%(MenuItem(1,'うめちゃんによるＵＧＭ解説','Menu_UgmNavi'))\n"
	_talk += "%(MenuItem(1,'ＵＧＭ事例集','Menu_UgmExample'))\n"

	if isUgm == 1 {
		_talk += "%(MenuItem(1,'ＵＧＭの受信履歴を開く','Menu_UgmLogOpen'))\n"
		_talk += "%(MenuItem(1,'ＵＧＭのポート設定を変更する','Menu_UgmConfigOpen'))\n"
	}
	else {
		_talk += '\![*]\f[strike,1]\f[color,disable]ＵＧＭの受信履歴を開く\f[default]\n'
		_talk += '\![*]\f[strike,1]\f[color,disable]ＵＧＭのポート設定を変更する\f[default]\n'
	}

	_talk += "\n[50]%(MenuHr('おしゃべり'))\n"
	_talk += "%(MenuItem(1,'何か話して','Menu_AITALK'))\n"

	if STRLEN(SHIORI3FW.LastAITalk) > 0 {
		_talk += "%(MenuItem(1,'さっきの話は？','Menu_LASTTALK'))\n"
	}
	else {
		_talk += '\![*]\f[color,disable]\f[strike,1]さっきの話は？\f[default]\n'
	}

	_talk += "%(MenuItem(1,'おしゃべりの頻度','Menu_TALKINTERVAL'))"
	_talk += '\![quicksection,0]\_n'
	_talk += "\1%(MenuComment('メニューです。'))"

	_talk
}

Menu_UgmLogOpen
{
	MenuCommentForce = '\![raiseplugin,6f0415e0-3c00-11ef-9a9c-0800200c9a66,OnMenuExec]開きました～。'
	Menu
}

Menu_UgmConfigOpen
{
	MenuCommentForce = '\![open,editor,"'
	MenuCommentForce += REPLACE( UgmPath , '\' , '/' ) + 'localweb/config.txt'
	MenuCommentForce += '",0]開きました～。\_q\n[150]'
	MenuCommentForce += '「localhost_number,」の右の数字を書き換えて、\nファイルを保存してください。\n[150]'
	MenuCommentForce += '以下の場合はデフォルトの8000番が使用されます。\n・SSP等が使っている9801番\n・範囲外の数字\n・数字以外\n・なんかおかしい\_q'
	Menu
}

//******************************************************************************
//各項目の処理内容
//******************************************************************************

//---- 何か話して
Menu_AITALK
{
	SHIORI3FW.InitBalloons
	--
	"\1%(ANY('えっと','ええっと','ううんと'))ですね～……\w9\w9\![raise,OnAITalk]"
}

//---- さっきの話は
Menu_LASTTALK
{
	//前のトークになにかある(＝文字列の長さが0ではない）時はそれを喋る
	if (STRLEN(SHIORI3FW.LastAITalk) > 0) {
		SHIORI3FW.InitBalloons
		--
		SHIORI3FW.LastAITalk
	}
	else {
		MenuCommentForce = 'まだ何も喋っていない気がします……。'
		Menu
	}
}

//---- トーク頻度の調整
Menu_TALKINTERVAL
{
	_BreadCrumbs = ('Menu|メニュー', 'Menu_TALKINTERVAL|現在地')
	_talk = ''

	_talk += '\![close,inputbox,__SYSTEM_ALL_INPUT__]'
	_talk += '\![quicksection,1]'
	_talk += '\0\_n'
	_talk += "%(CloseMenuButton)"
	_talk += "%(MenuBreadCrumbs(JOIN(_BreadCrumbs,',')))\n[150]"
	_talk += "%(MenuHr('おしゃべりの頻度'))\n"

	if aitalkinterval != 15 {
		_talk += "%(MenuItem(1,'にぎやか','Menu_TALKINTERVAL_Set','15'))\n"
	}
	else {
		_talk += '\![*]\f[color,disable]\f[underline,1]にぎやか\f[default]\n'
	}

	if aitalkinterval != 180 {
		_talk += "%(MenuItem(1,'ふつう','Menu_TALKINTERVAL_Set','180'))\n"
	}
	else {
		_talk += '\![*]\f[color,disable]\f[underline,1]ふつう\f[default]\n'
	}

	if aitalkinterval != 300 {
		_talk += "%(MenuItem(1,'ひそやか','Menu_TALKINTERVAL_Set','300'))\n"
	}
	else {
		_talk += '\![*]\f[color,disable]\f[underline,1]ひそやか\f[default]\n'
	}

	if aitalkinterval != 0 {
		_talk += "%(MenuItem(1,'しずかに','Menu_TALKINTERVAL_Set','0'))"
	}
	else {
		_talk += '\![*]\f[color,disable]\f[underline,1]しずかに\f[default]'
	}

	_talk += '\![quicksection,0]\_n'
	_talk += "\1%(MenuComment('どのくらいがいいですか？'))"

	_talk
}

//---- キャンセルされた
Menu_CANCEL
{
	<<"
	い：キャンセルですね。
	">>
}

//---- トーク頻度
Menu_TALKINTERVAL_Set
{
	aitalkinterval = TOINT(reference[2])
	case aitalkinterval {
		when 15 {
			MenuCommentForce = '１５秒間隔で喋ります。'
		}
		when 180 {
			MenuCommentForce = '３分間隔くらいで喋ります。'
		}
		when 300 {
			MenuCommentForce = '５分間隔くらいで喋ります。'
		}
		when 0 {
			MenuCommentForce = 'しずかに、ですね。'
		}
		others {
			// なにかがおかしいのでとりあえず0をセット
			aitalkinterval = 0
			MenuCommentForce = 'しずかに、ですね。'
		}
	}
	Menu_TALKINTERVAL
}

//---- ヘッドライン
Menu_HEADLINECANCEL
{
	//---- キャンセルされた
	<<"
	い：ヘッドライン、キャンセルしました。
	">>
}