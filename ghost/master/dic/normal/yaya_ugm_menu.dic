// UGM_Navi_Umechan
// プラグイン系のメニュー
//******************************************************************************

OnMenu_UgmTools
{
	BreadCrumbs = ('OnMenu|メニュー', 'OnMenu_UgmTools|ここ')
	<<"
	＠スクリプト：\![close,inputbox,__SYSTEM_ALL_INPUT__]
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	＠スクリプト：%(CloseMenuButton)
	＠スクリプト：%(MenuBreadCrumbs)\n[150]
	＠スクリプト：%(MenuHr('スクリプト作成＆イベント試行'))\n
	＠スクリプト：%(MenuItem(1,'メッセージ送信・編集','OnMenu_Send','info'))\n
	＠スクリプト：%(MenuItem(1,'予約済みメッセージの取り消し','OnMenu_Cancel','info'))\n
	＠スクリプト：%(MenuItem(1,'メッセージ状況問い合わせ','OnMenu_Request'))\n
	＠スクリプト：%(MenuItem(1,'トリガーを引く','OnMenu_Trigger'))
	＠スクリプト：\_n
	い【isUgm==1】：%(MenuComment('メニューだよ～'))
	い【それ以外】：プラグインが認識されてないよ～
	">>
}

//------------------------------------------------------------------------------
// プラグインから来るイベント
//------------------------------------------------------------------------------

OnUkagakaGhostMessenger_SendComplete
{
	<<"
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	う：\f[bold,1]\_a[SendComplete_r0]成功種別\_a\f[bold,0]
	う：%(reference[0])
	改多う：\f[bold,1]メッセージ識別子\f[bold,0]
	う：%(reference[1])
	改多う：\f[bold,1]送信者識別子\f[bold,0]
	う：%(reference[2])
	＠スクリプト：\![quicksection,0]\_n
	い：送信成功！
	">>
}

OnUkagakaGhostMessenger_SendFailure
{
	<<"
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	改多う：\f[bold,1]失敗理由\f[bold,0]
	う：%(reference[0])
	改多う：\f[bold,1]\_a[SendFailure_r1]メッセージ識別子\_a\f[bold,0]
	う：%(reference[1])
	改多う：\f[bold,1]\_a[SendFailure_r2]送信者識別子\_a\f[bold,0]
	う：%(reference[2])
	＠スクリプト：\![quicksection,0]\_n
	い：送信失敗……
	">>
}

OnUkagakaGhostMessenger_Response
{
	_loop = ''
	for _i=6; _i<ARRAYSIZE(reference); _i++ {
		_loop += "\n[150]\f[bold,1]＊文字列ランダム結果%(HAN2ZEN(_i-5))\f[bold,0]\n%(reference[_i])"
	}
	<<"
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	改多う：\f[bold,1]ゴースト名\f[bold,0]
	う：%(reference[0])
	改多う：\f[bold,1]送信者識別子\f[bold,0]
	う：%(reference[1])
	改多う：\f[bold,1]メッセージ識別子\f[bold,0]
	う：%(reference[2])
	改多う：\f[bold,1]\_a[Response_r3]メッセージの発動済み回数\_a\f[bold,0]
	う：%(reference[3])
	改多う：\f[bold,1]\_a[Response_r4]メッセージ発動時刻\_a\f[bold,0]
	う：%(reference[4])
	改多う：\f[bold,1]\_a[Response_r5]メッセージ既読時刻\_a\f[bold,0]
	う：%(reference[5])
	＠スクリプト：%(_loop)
	＠スクリプト：\![quicksection,0]\_n
	い：メッセージ発動！
	">>
}

OnUkagakaGhostMessenger_Ringing
{
	_loop = ''
	for _i=3; _i<ARRAYSIZE(reference); _i++ {
		_loop += "\n[150]\f[bold,1]＊追加情報%(HAN2ZEN(_i-2))\f[bold,0]\n%(reference[_i])"
	}

	<<"
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	改多う：\f[bold,1]送信元ゴースト名\f[bold,0]
	う：%(reference[0])
	改多う：\f[bold,1]送信者識別子\f[bold,0]
	う：%(reference[1])
	改多う：\f[bold,1]メッセージ識別子\f[bold,0]
	う：%(reference[2])
	＠スクリプト：%(_loop)
	＠スクリプト：\![quicksection,0]\_n
	い：メッセージ発動！
	">>
}

//------------------------------------------------------------------------------
// クリップボードにコピーする
//------------------------------------------------------------------------------

OnMenu_CopyScript
{
	_script = 'MakeScript_' + reference[0]
	_return_to = 'OnMenu_' + reference[0]
	if (ISEVALUABLE(_script) == 1) {
		_script = EVAL(_script)
		if (STRLEN(_script) > 0) {
			FUNCTIONEX('textcopy2.dll', _script)
		}
	}
	MenuCommentForce = 'クリップボードにコピーしたよ～'
	if ISFUNC(_return_to) {
		// 帰り先がある
		EVAL(_return_to)
	}
	else {
		// 帰り先を見つけられなかったのでコメントだけ言う
		MenuCommentForce
		ERASEVAR('MenuCommentForce')
	}
}

//------------------------------------------------------------------------------
// プラグインに送るスクリプトを作る
//------------------------------------------------------------------------------

MakeScript_Send
{
	_script = '\![raiseplugin,6f0415e0-3c00-11ef-9a9c-0800200c9a66,OnUkagakaGhostMessenger_Send'
	if (STRLEN(send_SenderId) > 0) {
		_script += ',"--SenderId=' + send_SenderId + '"'
	}
	if (STRLEN(send_SenderName) > 0) {
		_script += ',"--SenderName=' + send_SenderName + '"'
	}
	if (STRLEN(send_SenderIcon) > 0) {
		_script += ',"--SenderIcon=' + send_SenderIcon + '"'
	}
	if (STRLEN(send_SenderProfile) > 0) {
		_script += ',"--SenderProfile=' + send_SenderProfile + '"'
	}
	if (STRLEN(send_MessageId) > 0) {
		_script += ',"--MessageId=' + send_MessageId + '"'
	}
	if (STRLEN(TOSTR(send_Enable)) > 0) {
		_script += ',--Enable=' + send_Enable
	}
	if (STRLEN(send_Text) > 0) {
		_script += ',"--Text=' + send_Text + '"'
	}
	if (STRLEN(TOSTR(send_RunCount)) > 0) {
		_script += ',--RunCount=' + send_RunCount
	}
	if (STRLEN(TOSTR(send_Late)) > 0) {
		_script += ',--Late=' + send_Late
	}
	foreach send_EventReference; _ev_ref {
		if (STRLEN(TOSTR(_ev_ref)) > 0) {
			_script += ',"--EventReference=' + _ev_ref + '"'
		}
	}
	if (STRLEN(send_Time_After) > 0) {
		_script += ',"--Condition:Time_After=' + send_Time_After + '"'
	}
	if (STRLEN(send_Time_Seconds) > 0) {
		_script += ',--Condition:Time_Seconds=' + send_Time_Seconds
	}
	if (STRLEN(send_Time_DayOfWeek) > 0) {
		_script += ',--Condition:Time_DayOfWeek=' + send_Time_DayOfWeek
	}
	if (STRLEN(send_Time_During) > 0) {
		_script += ',"--Condition:Time_During=' + send_Time_During + '"'
	}
	if (STRLEN(send_Ghost_Booted) > 0) {
		_script += ',"--Condition:Ghost_Booted=' + send_Ghost_Booted + '"'
	}
	if (STRLEN(send_Ghost_Closed) > 0) {
		_script += ',"--Condition:Ghost_Closed=' + send_Ghost_Closed + '"'
	}
	if (STRLEN(send_Ghost_IsBooting) > 0) {
		_script += ',"--Condition:Ghost_IsBooting=' + send_Ghost_IsBooting + '"'
	}
	if (STRLEN(send_Ghost_IsNotBooting) > 0) {
		_script += ',"--Condition:Ghost_IsNotBooting=' + send_Ghost_IsNotBooting + '"'
	}
	if (STRLEN(send_Ghost_Exists) > 0) {
		_script += ',"--Condition:Ghost_Exists=' + send_Ghost_Exists + '"'
	}
	if (STRLEN(send_Ghost_NotExists) > 0) {
		_script += ',"--Condition:Ghost_NotExists=' + send_Ghost_NotExists + '"'
	}
	if (STRLEN(send_Ghost_IsInAddressBook) > 0) {
		_script += ',"--Condition:Ghost_IsInAddressBook=' + send_Ghost_IsInAddressBook + '"'
	}
	if (STRLEN(send_Ghost_Triggered) > 0) {
		_script += ',"--Condition:Ghost_Triggered=' + send_Ghost_Triggered + '"'
	}
	if (STRLEN(send_Message_Run) > 0) {
		_script += ',"--Condition:Message_Run=' + send_Message_Run + '"'
	}
	if (STRLEN(send_Message_IsRun) > 0) {
		_script += ',"--Condition:Message_IsRun=' + send_Message_IsRun + '"'
	}
	if (STRLEN(send_Message_IsNotRun) > 0) {
		_script += ',"--Condition:Message_IsNotRun=' + send_Message_IsNotRun + '"'
	}
	if (STRLEN(send_Message_Read) > 0) {
		_script += ',"--Condition:Message_Read=' + send_Message_Read + '"'
	}
	if (STRLEN(send_Message_IsRead) > 0) {
		_script += ',"--Condition:Message_IsRead=' + send_Message_IsRead + '"'
	}
	if (STRLEN(send_Message_IsNotRead) > 0) {
		_script += ',"--Condition:Message_IsNotRead=' + send_Message_IsNotRead + '"'
	}
	_script += ']'

	_script
}

MakeScript_Cancel
{
	// referenceの順番厳守
	_script = '\![raiseplugin,6f0415e0-3c00-11ef-9a9c-0800200c9a66,OnUkagakaGhostMessenger_Cancel,'
	if (STRLEN(cancel_SenderId) > 0) {
		_script += '"' + cancel_SenderId + '"'
	}
	_script += ']'
	_script
}

MakeScript_Trigger
{
	// referenceの順番厳守
	_script = '\![raiseplugin,6f0415e0-3c00-11ef-9a9c-0800200c9a66,OnUkagakaGhostMessenger_Trigger,'
	if (STRLEN(trigger_TriggerId) > 0) {
		_script += '"' + trigger_TriggerId + '"'
	}
	_script += ','
	if (STRLEN(trigger_TargerSender) > 0) {
		_script += '"' + trigger_TargerSender + '"'
	}
	_script += ','
	if (STRLEN(trigger_TargetSenderId) > 0) {
		_script += '"' + trigger_TargetSenderId + '"'
	}
	_script += ']'
	_script
}

MakeScript_Request
{
	// referenceの順番厳守
	_script = '\![raiseplugin,6f0415e0-3c00-11ef-9a9c-0800200c9a66,OnUkagakaGhostMessenger_Request,'
	if (STRLEN(request_Sender) > 0) {
		_script += '"' + request_Sender + '"'
	}
	_script += ','
	if (STRLEN(request_SenderId) > 0) {
		_script += '"' + request_SenderId + '"'
	}
	_script += ','
	if (STRLEN(request_MessageId) > 0) {
		_script += '"' + request_MessageId + '"'
	}
	_script += ']'
	_script
}

//------------------------------------------------------------------------------
// プラグインにイベントを送る
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// 引数の文字数がゼロなら未設定という文字列で返す
//------------------------------------------------------------------------------
GenerateTextLabel
{
	if (STRLEN(_argv[0]) <= 0) {
		'※未設定※'
	}
	else {
		_argv[0]
	}
}

//------------------------------------------------------------------------------
// OnUkagakaGhostMessenger_Request系列
//------------------------------------------------------------------------------

OnMenu_Request
{
	BreadCrumbs = ('OnMenu|メニュー', 'OnMenu_UgmTools|UGM 作成&試行', 'OnMenu_Request|ここ')
	<<"
	＠スクリプト：\![close,inputbox,__SYSTEM_ALL_INPUT__]
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	＠スクリプト：%(CloseMenuButton)
	＠スクリプト：%(MenuBreadCrumbs)\n[150]
	＠スクリプト：%(MenuHr('\_a[Request]メッセージ状況の取得\_a'))\n
	＠スクリプト：%(MenuItem(1,'以下の内容で問い合わせる','OnMenu_Request_Exec'))\n
	＠スクリプト：%(MenuItem(1,'スクリプトをコピーする','OnMenu_CopyScript','Request'))\n[150]
	＠スクリプト：\f[bold,1]\_a[Request_r0]ゴースト名\_a\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(request_Sender),'OnMenu_Request_Edit','request_Sender'))\n[150]
	＠スクリプト：\f[bold,1]\_a[Request_r1]送信者識別子\_a\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(request_SenderId),'OnMenu_Request_Edit','request_SenderId'))\n[150]
	＠スクリプト：\f[bold,1]メッセージ識別子\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(request_MessageId),'OnMenu_Request_Edit','request_MessageId'))
	＠スクリプト：\_n
	＠設定：クイックセクション
	待０い：\![quicksection,1]%(MenuComment(OnExplanationCall('Request')))
	">>
}

OnMenu_Request_Exec
{
	_script = MakeScript_Request
	MenuCommentForce = '問い合わせるよ～' + _script
	OnMenu_Request
}

OnMenu_Request_Edit
{
	_r0 = EVAL(reference[0])
	_script = '\![close,inputbox,__SYSTEM_ALL_INPUT__]\![open,inputbox,OnMenu_Request_Edit_Entered,0'
	if (STRLEN(_r0) > 0) {
		_script += ',--text="'
		_script += _r0
		_script += '"'
	}
	_script += ',--reference='
	_script += reference[0]
	_script += ']'
	MenuCommentForce = _script
	case reference[0] {
		when 'request_Sender' {
			MenuCommentForce += 'ゴースト名を入力してね～'
		}
		when 'request_SenderId' {
			MenuCommentForce += '送信者識別子を入力してね～'
		}
		when 'request_MessageId' {
			MenuCommentForce += 'メッセージ識別子を入力してね～'
		}
	}
	OnMenu_Request
}

OnMenu_Request_Edit_tooltip
{
	if ISEVALUABLE(reference[2])==1 {
		EVAL(reference[2])
	}
}

OnMenu_Request_Edit_Entered
{
	_entered = reference[0]
	_entered = SHIORI3FW.TranslateSystemChar(_entered)
	_entered = SHIORI3FW.EscapeAllTags(_entered)
	LETTONAME(reference[2], _entered)
	OnMenu_Request
}

//------------------------------------------------------------------------------
// OnUkagakaGhostMessenger_Send系列
//------------------------------------------------------------------------------

OnMenu_Send
{
	_right = "\_l[%(BalloonValidWidth/2),]"

	BreadCrumbs = ('OnMenu|メニュー', 'OnMenu_UgmTools|UGM 作成&試行', 'OnMenu_Send|ここ')
	<<"
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n\![set,autoscroll,disable]
	＠スクリプト：%(CloseMenuButton)
	＠スクリプト：%(MenuBreadCrumbs)\n[150]

	＠スクリプト：%(MenuHr('\_a[Send]メッセージ送信と編集\_a'))\n

	＠スクリプト：%(MenuItem(1,'入力済みの内容で送信する','OnMenu_Send_Exec'))\n
	＠スクリプト：%(MenuItem(1,'スクリプトをコピーする','OnMenu_CopyScript','Send'))\n[150]
	">>
	--
	if (_argv[0] == 'cond') {
		<<"
		\__q[OnMenu_Send_PageTurn,info]［情報］\__q　\__q[OnMenu_Send_PageTurn,reference]［追加情報］\__q　\f[underline,1]【条件】\f[underline,0]\n[150]

		＠スクリプト：\f[bold,1]\_a[Time_After]指定時刻以降\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Time_After),'OnMenu_Send_Edit','send_Time_After'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Time_Seconds]指定秒数経過後\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Time_Seconds),'OnMenu_Send_Edit','send_Time_Seconds'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Time_DayOfWeek]指定の曜日\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Time_DayOfWeek),'OnMenu_Send_Edit','send_Time_DayOfWeek'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Time_During]指定の時間帯\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Time_During),'OnMenu_Send_Edit','send_Time_During'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Ghost_Booted]ゴーストが起動した\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Ghost_Booted),'OnMenu_Send_Edit','send_Ghost_Booted'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Ghost_Closed]ゴーストが終了した\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Ghost_Closed),'OnMenu_Send_Edit','send_Ghost_Closed'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Ghost_IsBooting]ゴーストが起動中\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Ghost_IsBooting),'OnMenu_Send_Edit','send_Ghost_IsBooting'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Ghost_IsNotBooting]ゴーストが非起動中\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Ghost_IsNotBooting),'OnMenu_Send_Edit','send_Ghost_IsNotBooting'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Ghost_Exists]ゴースト導入済み\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Ghost_Exists),'OnMenu_Send_Edit','send_Ghost_Exists'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Ghost_NotExists]ゴースト未導入\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Ghost_NotExists),'OnMenu_Send_Edit','send_Ghost_NotExists'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Ghost_IsInAddressBook]ゴースト連絡先登録済\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Ghost_IsInAddressBook),'OnMenu_Send_Edit','send_Ghost_IsInAddressBook'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Ghost_Triggered]トリガーを引かれた\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Ghost_Triggered),'OnMenu_Send_Edit','send_Ghost_Triggered'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Message_Run]メッセージが発動した\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Message_Run),'OnMenu_Send_Edit','send_Message_Run'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Message_Read]メッセージが読まれた瞬間\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Message_Read),'OnMenu_Send_Edit','send_Message_Read'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Message_IsRun]メッセージ発動済み\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Message_IsRun),'OnMenu_Send_Edit','send_Message_IsRun'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Message_IsNotRun]メッセージ未発動\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Message_IsNotRun),'OnMenu_Send_Edit','send_Message_IsNotRun'))\n[150]

		＠スクリプト：\f[bold,1]\_a[Message_IsRead]メッセージが既読\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_Message_IsRead),'OnMenu_Send_Edit','send_Message_IsRead'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Message_IsNotRead]メッセージが未読\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Message_IsNotRead),'OnMenu_Send_Edit','send_Message_IsNotRead'))
		">>
	}
	elseif (_argv[0] == 'reference') {
		_loop = ''
		_count = 0
		for _i=0; _i<ARRAYSIZE(send_EventReference); _i++ {
			_loop += "Reference%(_i+3): \![*]\__q[OnMenu_Send_Edit_EventReference,%(_count)]%(SHIORI3FW.MakeJustText(send_EventReference[_count],BalloonCharCnt-16))\__q\n[150]"
			_count = _i + 1
		}
		_loop += "Reference%(_i+3): \![*]\__q[OnMenu_Send_Edit_EventReference,%(_count)]%(SHIORI3FW.MakeJustText('新規追加',BalloonCharCnt-16))\__q"
		<<"
		\__q[OnMenu_Send_PageTurn,info]［情報］\__q　\f[underline,1]【追加情報】\f[underline,0]　\__q[OnMenu_Send_PageTurn,cond]［条件］\__q\n[150]

		＠スクリプト：\f[bold,1]\_a[EventReference]イベントリファレンス\_a\f[bold,0]\n[150]
		＠スクリプト：%(_loop)
		">>
	}
	else {
		<<"
		\f[underline,1]【情報】\f[underline,0]　\__q[OnMenu_Send_PageTurn,reference]［追加情報］\__q　\__q[OnMenu_Send_PageTurn,cond]［条件］\__q\n[150]

		＠スクリプト：\f[bold,1]\_a[Text]本文\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(1,GenerateTextLabel(send_Text),'OnMenu_Send_Edit','send_Text'))\n[150]

		＠スクリプト：\f[bold,1]\_a[MessageId]メッセージ識別子\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_MessageId),'OnMenu_Send_Edit','send_MessageId'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Enable]有効状態\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Enable),'OnMenu_Send_Edit','send_Enable'))\n[150]

		＠スクリプト：\f[bold,1]\_a[SenderId]送信者識別子\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_SenderId),'OnMenu_Send_Edit','send_SenderId'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[SenderName]表示用送信者名\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_SenderName),'OnMenu_Send_Edit','send_SenderName'))\n[150]

		＠スクリプト：\f[bold,1]\_a[SenderIcon]アイコン画像\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_SenderIcon),'OnMenu_Send_Edit','send_SenderIcon'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[SenderProfile]プロフィール文章\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_SenderProfile),'OnMenu_Send_Edit','send_SenderProfile'))\n[150]

		＠スクリプト：\f[bold,1]\_a[RunCount]実行回数\_a\f[bold,0]\n
		＠スクリプト：%(MenuItem(2,GenerateTextLabel(send_RunCount),'OnMenu_Send_Edit','send_RunCount'))\n[-100]
		＠スクリプト：%(_right)\f[bold,1]\_a[Late]遅延秒数\_a\f[bold,0]\n
		＠スクリプト：%(_right)%(MenuItem(2,GenerateTextLabel(send_Late),'OnMenu_Send_Edit','send_Late'))
		">>
	}
	--
	<<"
	\_n
	＠設定：クイックセクション
	待０い：\![quicksection,1]%(MenuComment(OnExplanationCall('Send')))
	">>
}

OnMenu_Send_PageTurn
{
	case reference[0] {
		when 'info' {
			MenuCommentForce = '情報を編集する？\n[150]未設定に戻すときは、空欄で決定してね～'
		}
		when 'reference' {
			MenuCommentForce = '追加情報を編集する？\n[150]未設定に戻すときは、空欄で決定してね～'
		}
		when 'cond' {
			MenuCommentForce = '条件を編集する？\n[150]未設定に戻すときは、空欄で決定してね\n[150]設定済みの条件を全て達成した時だけ\nメッセージは発動するの～'
		}
	}
	OnMenu_Send(reference[0])
}

OnMenu_Send_Exec
{
	_script = MakeScript_Send
	MenuCommentForce = '送信するよ～' + _script
	OnMenu_Send
}

OnMenu_Send_Edit
{
	_r0 = EVAL(reference[0])
	_script = '\![close,inputbox,__SYSTEM_ALL_INPUT__]\![open,inputbox,OnMenu_Send_Edit_Entered,0'
	if (STRLEN(_r0) > 0) {
		_script += ',--text="'
		_script += _r0
		_script += '"'
	}
	_script += ',--reference='
	_script += reference[0]
	_script += ']'

	_kaisetsu = SUBSTR(reference[0], 5, 999)
	_script += OnExplanationCall(_kaisetsu)

	MenuCommentForce = _script

	if (STRSTR(reference[0], 'send_Time_', 0) == 0 || STRSTR(reference[0], 'send_Ghost_', 0) == 0 || STRSTR(reference[0], 'send_Message_', 0) == 0) {
		OnMenu_Send('cond')
	}
	else {
		OnMenu_Send
	}
}

OnMenu_Send_Edit_tooltip
{
	if ISEVALUABLE(reference[2])==1 {
		EVAL(reference[2])
	}
}

OnMenu_Send_Edit_Entered
{
	_r0 = reference[0]
	_r0 = SHIORI3FW.EscapeAllTags(_r0)

	case reference[2] {
		when 'send_Enable' {
			if TOINT(_r0) == 1 || TOINT(_r0) == 0 {
				send_Enable = TOINT(_r0)
			}
			else {
				send_Enable = 0
				MenuCommentForce = '0に戻したよ～'
			}
		}
		when 'send_RunCount' {
			if !(_r0 >= 0) {
				send_RunCount = 1
				MenuCommentForce = '1に戻したよ～'
			}
			else {
				send_RunCount = TOINT(_r0)
			}
		}
		when 'send_Late' {
			if (RE_MATCH(_r0,'\d+')==1) {
				send_Late = TOINT(_r0)
			}
			else {
				_arr = ASORT('int',ARRAYDEDUP(SPLITEX(TOSTR(_r0), '-')))
				if ARRAYSIZE(_arr)>=2 {
					_arr = (TOINT(_arr[0]),TOINT(_arr[1]))
					send_Late = JOIN(_arr,'-')
				} else {
					send_Late = TOINT(_arr[0])
				}
			}
		}
		when 'send_Time_After' {
			_arr = SPLITEX(TOSTR(_r0), '/')
			_cnt = ARRAYSIZE(_arr)
			_arr = REVERSE(_arr)
			_arr[5] = ''
			_arr = REVERSE(_arr)
			_arr[0] = IARRAY
			TESTTEST=_arr
			_now = GETTIME()
			_now = (_now[0], _now[1], _now[2], _now[4], _now[5])
			_entered = IARRAY
			for _i=0; _i<5; _i++ {
				if (RE_MATCH(_arr[_i], '\d+') == 1) {
					_entered[_i] = TOINT(_arr[_i])
				}
				else {
					_entered[_i] = _now[_i]
				}
			}
			_time = GETSECCOUNT(_entered[0], _entered[1], _entered[2], 0, _entered[3], _entered[4], 0)
			_time = GETTIME(_time)
			_result = ''
			case _cnt {
				when 1 {
					_result = STRFORM('$02d', _time[5])
				}
				when 2 {
					_result = STRFORM('$02d/$02d', _time[4], _time[5])
				}
				when 3 {
					_result = STRFORM('$02d/$02d/$02d', _time[2], _time[4], _time[5])
				}
				when 4 {
					_result = STRFORM('$02d/$02d/$02d/$02d', _time[1], _time[2], _time[4], _time[5])
				}
				when 5 {
					_result = STRFORM('$04d/$02d/$02d/$02d/$02d', _time[0], _time[1], _time[2], _time[4], _time[5])
				}
			}
			if STRLEN(_result) <= 0 {
				send_Time_After = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				send_Time_After = _result
			}
		}
		when 'send_Time_Seconds' {
			if (STRLEN(_r0)>0) {
				send_Time_Seconds = TOINT(_r0)
			} else {
				send_Time_Seconds = ''
			}
		}
		when 'send_Time_DayOfWeek' {
			_r0 = TOINT(_r0)
			if (_r0 >= 1 && _r0 <= 7) {
				send_Time_DayOfWeek = _r0
			}
			else {
				send_Time_DayOfWeek = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
		}
		when 'send_Time_During' {
			_result = IARRAY
			_arr = SPLITEX(TOSTR(_r0), ':')
			foreach _arr; _time {
				_time = SPLITEX(TOSTR(_time), '/')
				_time = (TOINT(_time[0]),TOINT(_time[1]))
				_time = ARRAYDEDUP(_time)
				if ARRAYSIZE(_time)==2 {_result ,= STRFORM('$04d/$04d',TOINT(_time[0]),TOINT(_time[1]))}
			}
			if ARRAYSIZE(_result)<=0 {
				send_Time_During = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				send_Time_During = JOIN(_result,':')
			}
		}
		when 'send_Ghost_Booted' {
			send_Ghost_Booted = SHIORI3FW.TranslateSystemChar(_r0)
		}
		when 'send_Ghost_Closed' {
			send_Ghost_Closed = SHIORI3FW.TranslateSystemChar(_r0)
		}
		when 'send_Ghost_IsBooting' {
			if (STRSTR(_r0, '/', 0) == -1) {
				send_Ghost_IsBooting = SHIORI3FW.TranslateSystemChar(_r0)
			}
			else {
				_arr = SPLITEX(TOSTR(_r0), '/')
				_result = IARRAY
				foreach _arr; _ghost {
					_result ,= SHIORI3FW.TranslateSystemChar(_ghost)
				}
				send_Ghost_IsBooting = JOIN(_result, '/')
			}
		}
		when 'send_Ghost_IsNotBooting' {
			if (STRSTR(_r0, '/', 0) == -1) {
				send_Ghost_IsNotBooting = SHIORI3FW.TranslateSystemChar(_r0)
			}
			else {
				_arr = SPLITEX(TOSTR(_r0), '/')
				_result = IARRAY
				foreach _arr; _ghost {
					_result ,= SHIORI3FW.TranslateSystemChar(_ghost)
				}
				send_Ghost_IsNotBooting = JOIN(_result, '/')
			}
		}
		when 'send_Ghost_Exists' {
			if (STRSTR(_r0, '/', 0) == -1) {
				send_Ghost_Exists = SHIORI3FW.TranslateSystemChar(_r0)
			}
			else {
				_arr = SPLITEX(TOSTR(_r0), '/')
				_result = IARRAY
				foreach _arr; _ghost {
					_result ,= SHIORI3FW.TranslateSystemChar(_ghost)
				}
				send_Ghost_Exists = JOIN(_result, '/')
			}
		}
		when 'send_Ghost_NotExists' {
			if (STRSTR(_r0, '/', 0) == -1) {
				send_Ghost_NotExists = SHIORI3FW.TranslateSystemChar(_r0)
			}
			else {
				_arr = SPLITEX(TOSTR(_r0), '/')
				_result = IARRAY
				foreach _arr; _ghost {
					_result ,= SHIORI3FW.TranslateSystemChar(_ghost)
				}
				send_Ghost_NotExists = JOIN(_result, '/')
			}
		}
		when 'send_Ghost_IsInAddressBook' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Ghost_IsInAddressBook = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr0 = SPLITEX( _r0, ':' )
				foreach _arr0; _curt {
					_arr1 = SPLITEX( _curt, '/' )
					if (STRLEN(_arr1[0])>0&&STRLEN(_arr1[1])>0) {
						_result ,= SHIORI3FW.TranslateSystemChar(_arr1[0])+'/'+SHIORI3FW.TranslateSystemChar(_arr1[1])
					}
				}
				send_Ghost_IsInAddressBook = JOIN(_result,':')
				if (STRLEN(send_Ghost_IsInAddressBook)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Ghost_Triggered' {
			if STRLEN(_r0)<=0 {
				send_Ghost_Triggered = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			elseif (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Ghost_Triggered = SHIORI3FW.TranslateSystemChar(_r0)
			}
			else {
				_result = IARRAY
				_arr = SPLITEX( _r0, '/' )
				foreach _arr; _curt {
					_result ,= SHIORI3FW.TranslateSystemChar(_curt)
				}
				send_Ghost_Triggered = JOIN(_result,'/')
				if (STRLEN(send_Ghost_Triggered)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_Run' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_Run = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr = SPLITEX( _r0, '/' )
				foreach _arr; _curt {
					_result ,= SHIORI3FW.TranslateSystemChar(_curt)
				}
				send_Message_Run = JOIN(_result,'/')
				if (STRLEN(send_Message_Run)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_IsRun' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_IsRun = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr0 = SPLITEX( _r0, ':' )
				foreach _arr0; _curt {
					_arr1 = SPLITEX( _curt, '/' )
					if (STRLEN(_arr1[0])>0&&STRLEN(_arr1[1])>0) {
						_result ,= SHIORI3FW.TranslateSystemChar(_arr1[0])+'/'+SHIORI3FW.TranslateSystemChar(_arr1[1])
					}
				}
				send_Message_IsRun = JOIN(_result,':')
				if (STRLEN(send_Message_IsRun)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_IsNotRun' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_IsNotRun = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr0 = SPLITEX( _r0, ':' )
				foreach _arr0; _curt {
					_arr1 = SPLITEX( _curt, '/' )
					if (STRLEN(_arr1[0])>0&&STRLEN(_arr1[1])>0) {
						_result ,= SHIORI3FW.TranslateSystemChar(_arr1[0])+'/'+SHIORI3FW.TranslateSystemChar(_arr1[1])
					}
				}
				send_Message_IsNotRun = JOIN(_result,':')
				if (STRLEN(send_Message_IsNotRun)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_Read' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_Read = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr = SPLITEX( _r0, '/' )
				foreach _arr; _curt {
					_result ,= SHIORI3FW.TranslateSystemChar(_curt)
				}
				send_Message_Read = JOIN(_result,'/')
				if (STRLEN(send_Message_Read)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_IsRead' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_IsRead = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr0 = SPLITEX( _r0, ':' )
				foreach _arr0; _curt {
					_arr1 = SPLITEX( _curt, '/' )
					if (STRLEN(_arr1[0])>0&&STRLEN(_arr1[1])>0) {
						_result ,= SHIORI3FW.TranslateSystemChar(_arr1[0])+'/'+SHIORI3FW.TranslateSystemChar(_arr1[1])
					}
				}
				send_Message_IsRead = JOIN(_result,':')
				if (STRLEN(send_Message_IsRead)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		when 'send_Message_IsNotRead' {
			if (STRSTR( _r0 , '/', 0 ) == -1) {
				send_Message_IsRead = ''
				MenuCommentForce = '未設定に戻したよ～'
			}
			else {
				_result = IARRAY
				_arr0 = SPLITEX( _r0, ':' )
				foreach _arr0; _curt {
					_arr1 = SPLITEX( _curt, '/' )
					if (STRLEN(_arr1[0])>0&&STRLEN(_arr1[1])>0) {
						_result ,= SHIORI3FW.TranslateSystemChar(_arr1[0])+'/'+SHIORI3FW.TranslateSystemChar(_arr1[1])
					}
				}
				send_Message_IsRead = JOIN(_result,':')
				if (STRLEN(send_Message_IsRead)<=0) {
					MenuCommentForce = '未設定に戻したよ～'
				}
			}
		}
		others {
			_r0 = SHIORI3FW.TranslateSystemChar(_r0)
			LETTONAME(reference[2], _r0)
		}
	}

	if (STRSTR(reference[2], 'send_Time_', 0) == 0 || STRSTR(reference[2], 'send_Ghost_', 0) == 0 || STRSTR(reference[2], 'send_Message_', 0) == 0) {
		OnMenu_Send('cond')
	}
	else {
		OnMenu_Send
	}
}

OnMenu_Send_Edit_EventReference
{
	_r0 = send_EventReference[TOINT(reference[0])]
	_script = '\![close,inputbox,__SYSTEM_ALL_INPUT__]\![open,inputbox,OnMenu_Send_Edit_Entered_EventReference,0'
	if (STRLEN(_r0) > 0) {
		_script += ',--text="'
		_script += _r0
		_script += '"'
	}
	_script += ',--reference='
	_script += reference[0]
	_script += ']'

	_script += '\_a[EventReference]イベントリファレンス\_aを入力してね～\n[150]削除する場合は空欄にして決定だよ'

	MenuCommentForce = _script
	OnMenu_Send('reference')
}

OnMenu_Send_Edit_Entered_EventReference
{
	if (STRLEN(reference[0]) > 0) {
		_entered = reference[0]
		_entered = SHIORI3FW.TranslateSystemChar(_entered)
		_entered = SHIORI3FW.EscapeAllTags(_entered)
		_count = TOINT(reference[2])
		send_EventReference[_count] = _entered
	}
	else {
		_count = TOINT(reference[2])
		send_EventReference[_count] = IARRAY
	}

	OnMenu_Send('reference')
}

//------------------------------------------------------------------------------
// OnUkagakaGhostMessenger_Cancel系列
//------------------------------------------------------------------------------

OnMenu_Cancel
{
	BreadCrumbs = ('OnMenu|メニュー', 'OnMenu_UgmTools|UGM 作成&試行', 'OnMenu_Cancel|ここ')
	<<"
	＠スクリプト：\![close,inputbox,__SYSTEM_ALL_INPUT__]
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	＠スクリプト：%(CloseMenuButton)
	＠スクリプト：%(MenuBreadCrumbs)\n[150]
	＠スクリプト：%(MenuHr('\_a[Cancel]メッセージの取り消し\_a'))\n
	＠スクリプト：%(MenuItem(1,'以下の内容で取り消す','OnMenu_Cancel_Exec'))\n
	＠スクリプト：%(MenuItem(1,'スクリプトをコピーする','OnMenu_CopyScript','Cancel'))\n[150]
	＠スクリプト：\f[bold,1]送信者識別子\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(cancel_SenderId),'OnMenu_Cancel_Edit','cancel_SenderId'))
	＠スクリプト：\_n
	＠設定：クイックセクション
	待０い：\![quicksection,1]%(MenuComment(OnExplanationCall('Cancel')))
	">>
}

OnMenu_Cancel_Exec
{
	_script = MakeScript_Cancel
	MenuCommentForce = '取り消すよ～' + _script
	OnMenu_Cancel
}

OnMenu_Cancel_Edit
{
	_r0 = EVAL(reference[0])
	_script = '\![close,inputbox,__SYSTEM_ALL_INPUT__]\![open,inputbox,OnMenu_Cancel_Edit_Entered,0'
	if (STRLEN(_r0) > 0) {
		_script += ',--text="'
		_script += _r0
		_script += '"'
	}
	_script += ',--reference='
	_script += reference[0]
	_script += ']'
	MenuCommentForce = _script
	MenuCommentForce += '送信者識別子を入力してね'
	MenuCommentForce += '\n[150]未設定に戻すなら空欄で決定だよ～'
	OnMenu_Cancel
}

OnMenu_Cancel_Edit_tooltip
{
	if ISEVALUABLE(reference[2])==1 {
		EVAL(reference[2])
	}
}

OnMenu_Cancel_Edit_Entered
{
	_entered = reference[0]
	_entered = SHIORI3FW.TranslateSystemChar(_entered)
	_entered = SHIORI3FW.EscapeAllTags(_entered)
	LETTONAME(reference[2], _entered)
	OnMenu_Cancel
}

//------------------------------------------------------------------------------
// OnUkagakaGhostMessenger_Trigger系列
//------------------------------------------------------------------------------

OnMenu_Trigger
{
	BreadCrumbs = ('OnMenu|メニュー', 'OnMenu_UgmTools|UGM 作成&試行', 'OnMenu_Trigger|ここ')
	<<"
	＠スクリプト：\![close,inputbox,__SYSTEM_ALL_INPUT__]
	＠スクリプト：\![quicksection,1]
	＠スクリプト：\0\_n
	＠スクリプト：%(CloseMenuButton)
	＠スクリプト：%(MenuBreadCrumbs)\n[150]
	＠スクリプト：%(MenuHr('\_a[Trigger]メッセージのトリガー\_a'))\n
	＠スクリプト：%(MenuItem(1,'以下の内容で取り消す','OnMenu_Trigger_Exec'))\n
	＠スクリプト：%(MenuItem(1,'スクリプトをコピーする','OnMenu_CopyScript','Trigger'))\n[150]
	＠スクリプト：\f[bold,1]イベント識別子\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(trigger_TriggerId),'OnMenu_Trigger_Edit','trigger_TriggerId'))\n[150]
	＠スクリプト：\f[bold,1]対象ゴースト名\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(trigger_TargerSender),'OnMenu_Trigger_Edit','trigger_TargerSender'))\n[150]
	＠スクリプト：\f[bold,1]対象の送信者識別子\f[bold,0]\n
	＠スクリプト：%(MenuItem(1,GenerateTextLabel(trigger_TargetSenderId),'OnMenu_Trigger_Edit','trigger_TargetSenderId'))
	＠スクリプト：\_n
	＠設定：クイックセクション
	待０い：\![quicksection,1]%(MenuComment(OnExplanationCall('Trigger')))
	">>
}

OnMenu_Trigger_Exec
{
	_script = MakeScript_Trigger
	MenuCommentForce = '問い合わせるよ～' + _script
	OnMenu_Trigger
}

OnMenu_Trigger_Edit
{
	_r0 = EVAL(reference[0])
	_script = '\![close,inputbox,__SYSTEM_ALL_INPUT__]\![open,inputbox,OnMenu_Trigger_Edit_Entered,0'
	if (STRLEN(_r0) > 0) {
		_script += ',--text="'
		_script += _r0
		_script += '"'
	}
	_script += ',--reference='
	_script += reference[0]
	_script += ']'
	MenuCommentForce = _script

	case reference[0] {
		when 'trigger_TriggerId' {
			MenuCommentForce += 'イベントを識別するための文字列を\n入力してね～'
		}
		when 'trigger_TargerSender' {
			MenuCommentForce += '対象のゴースト名を入力してね'
			MenuCommentForce += '\n[150]省略すると、全員に送られるよ'
			MenuCommentForce += '\n[150]未設定に戻すなら空欄で決定だよ～'
		}
		when 'trigger_TargetSenderId' {
			MenuCommentForce += '対象の送信者識別子を入力してね'
			MenuCommentForce += '\n[150]省略すると、そのゴースト内の全員に送られるよ'
			MenuCommentForce += '\n[150]ゴースト名も省略したら、\n対象が全ての全員になるよ'
			MenuCommentForce += '\n[150]未設定に戻すなら空欄で決定だよ～'
		}
	}
	OnMenu_Trigger
}

OnMenu_Trigger_Edit_tooltip
{
	if ISEVALUABLE(reference[2])==1 {
		EVAL(reference[2])
	}
}

OnMenu_Trigger_Edit_Entered
{
	_entered = reference[0]
	_entered = SHIORI3FW.TranslateSystemChar(_entered)
	_entered = SHIORI3FW.EscapeAllTags(_entered)
	LETTONAME(reference[2], _entered)
	OnMenu_Trigger
}